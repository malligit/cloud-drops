{"ast":null,"code":"import _classCallCheck from \"/Users/malli/tech-space/go-space/go-react-mysql-crud-apps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/malli/tech-space/go-space/go-react-mysql-crud-apps/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nvar CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080\";\nvar ConfigServerService = /*#__PURE__*/function () {\n  function ConfigServerService() {\n    _classCallCheck(this, ConfigServerService);\n  }\n  _createClass(ConfigServerService, [{\n    key: \"getConfigs\",\n    value: function getConfigs() {\n      console.log(\"Reading config data\");\n      return axios.get(CONFIG_SERVER_API_BASE_URL + \"/\" + \"configs\");\n    }\n  }, {\n    key: \"getConfigById\",\n    value: function getConfigById(id) {\n      console.log(\"Reading config data by Id\");\n      return axios.get(CONFIG_SERVER_API_BASE_URL + \"/config/\" + id);\n    }\n  }, {\n    key: \"getConfigsByEnv\",\n    value: function getConfigsByEnv(env) {\n      console.log(env);\n      return axios.get(CONFIG_SERVER_API_BASE_URL + \"/configs/\" + env);\n    }\n  }, {\n    key: \"getConfigsByEnvBySvc\",\n    value: function getConfigsByEnvBySvc(env, svc) {\n      console.log(env + \"@@@@@@\" + svc);\n      return axios.get(CONFIG_SERVER_API_BASE_URL + \"/\" + \"configs/\" + env + \"/\" + svc);\n    }\n  }, {\n    key: \"getEnvironments\",\n    value: function getEnvironments() {\n      console.log(\"Reading Envs data\");\n      return axios.get(CONFIG_SERVER_API_BASE_URL + \"/envs\");\n    }\n  }, {\n    key: \"getServices\",\n    value: function getServices(env) {\n      console.log(\"Reading services \");\n      return axios.get(CONFIG_SERVER_API_BASE_URL + \"/envs/\" + env);\n    } //Write operations  \n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(configValue, configId) {\n      return axios.put(CONFIG_SERVER_API_BASE_URL + '/update-config/' + configId, configValue);\n    }\n  }, {\n    key: \"createConfig\",\n    value: function createConfig(config) {\n      return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n    }\n  }]);\n  return ConfigServerService;\n}();\nexport default new ConfigServerService();","map":{"version":3,"names":["axios","CONFIG_SERVER_API_BASE_URL","ConfigServerService","_classCallCheck","_createClass","key","value","getConfigs","console","log","get","getConfigById","id","getConfigsByEnv","env","getConfigsByEnvBySvc","svc","getEnvironments","getServices","updateConfig","configValue","configId","put","createConfig","config","post"],"sources":["/Users/malli/tech-space/go-space/go-react-mysql-crud-apps/frontend/src/services/ConfigServerService.js"],"sourcesContent":["import axios from 'axios';\n\nconst CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080\";\n\n\nclass ConfigServerService {\n\n    getConfigs(){\n        console.log(\"Reading config data\");\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/\"+\"configs\");\n    }\n    getConfigById(id){\n        console.log(\"Reading config data by Id\");\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/config/\"+id);\n    }\n    getConfigsByEnv(env) {\n        console.log(env);\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/configs/\"+env);\n    }\n    getConfigsByEnvBySvc(env,svc) {\n        console.log(env+\"@@@@@@\"+svc);\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/\"+\"configs/\"+env+\"/\"+svc);\n    }\n\n    getEnvironments(){\n        console.log(\"Reading Envs data\");\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/envs\");\n    }\n        \n    getServices(env){\n        console.log(\"Reading services \");\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/envs/\"+env);\n    }\n//Write operations  \n\n    updateConfig(configValue, configId){\n        return axios.put(CONFIG_SERVER_API_BASE_URL + '/update-config/' + configId, configValue);\n    }\n\n    createConfig(config){\n        return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n    }\n   \n}\n\nexport default new ConfigServerService()"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,0BAA0B,GAAG,uBAAuB;AAAC,IAGrDC,mBAAmB;EAAA,SAAAA,oBAAA;IAAAC,eAAA,OAAAD,mBAAA;EAAA;EAAAE,YAAA,CAAAF,mBAAA;IAAAG,GAAA;IAAAC,KAAA,WAAAC,WAAA,EAET;MACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClC,OAAOT,KAAK,CAACU,GAAG,CAACT,0BAA0B,GAAC,GAAG,GAAC,SAAS,CAAC;IAC9D;EAAC;IAAAI,GAAA;IAAAC,KAAA,WAAAK,cACaC,EAAE,EAAC;MACbJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC,OAAOT,KAAK,CAACU,GAAG,CAACT,0BAA0B,GAAC,UAAU,GAACW,EAAE,CAAC;IAC9D;EAAC;IAAAP,GAAA;IAAAC,KAAA,WAAAO,gBACeC,GAAG,EAAE;MACjBN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;MAChB,OAAOd,KAAK,CAACU,GAAG,CAACT,0BAA0B,GAAC,WAAW,GAACa,GAAG,CAAC;IAChE;EAAC;IAAAT,GAAA;IAAAC,KAAA,WAAAS,qBACoBD,GAAG,EAACE,GAAG,EAAE;MAC1BR,OAAO,CAACC,GAAG,CAACK,GAAG,GAAC,QAAQ,GAACE,GAAG,CAAC;MAC7B,OAAOhB,KAAK,CAACU,GAAG,CAACT,0BAA0B,GAAC,GAAG,GAAC,UAAU,GAACa,GAAG,GAAC,GAAG,GAACE,GAAG,CAAC;IAC3E;EAAC;IAAAX,GAAA;IAAAC,KAAA,WAAAW,gBAAA,EAEgB;MACbT,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC,OAAOT,KAAK,CAACU,GAAG,CAACT,0BAA0B,GAAC,OAAO,CAAC;IACxD;EAAC;IAAAI,GAAA;IAAAC,KAAA,WAAAY,YAEWJ,GAAG,EAAC;MACZN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC,OAAOT,KAAK,CAACU,GAAG,CAACT,0BAA0B,GAAC,QAAQ,GAACa,GAAG,CAAC;IAC7D,CAAC,CACL;EAAA;IAAAT,GAAA;IAAAC,KAAA,WAAAa,aAEiBC,WAAW,EAAEC,QAAQ,EAAC;MAC/B,OAAOrB,KAAK,CAACsB,GAAG,CAACrB,0BAA0B,GAAG,iBAAiB,GAAGoB,QAAQ,EAAED,WAAW,CAAC;IAC5F;EAAC;IAAAf,GAAA;IAAAC,KAAA,WAAAiB,aAEYC,MAAM,EAAC;MAChB,OAAOxB,KAAK,CAACyB,IAAI,CAACxB,0BAA0B,EAAEuB,MAAM,CAAC;IACzD;EAAC;EAAA,OAAAtB,mBAAA;AAAA;AAIL,eAAe,IAAIA,mBAAmB,CAAC,CAAC"},"metadata":{},"sourceType":"module"}