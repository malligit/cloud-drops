{"ast":null,"code":"import axios from 'axios';\nconst CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080/configs\";\n\nclass ConfigServerService {\n  getConfigs() {\n    return axios.get(CONFIG_SERVER_API_BASE_URL);\n  }\n\n  createConfig(config) {\n    return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n  }\n\n  getConfigById(configId) {\n    return axios.get(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n  }\n\n  updateConfig(config, configId) {\n    return axios.put(CONFIG_SERVER_API_BASE_URL + '/' + configId, config);\n  }\n\n  deleteConfig(configId) {\n    return axios.delete(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n  }\n\n}\n\nexport default new ConfigServerService();","map":{"version":3,"sources":["/Users/malli/tech-space/go-space/go-react-mysql-crud-apps/frontend/src/services/ConfigServerService.js"],"names":["axios","CONFIG_SERVER_API_BASE_URL","ConfigServerService","getConfigs","get","createConfig","config","post","getConfigById","configId","updateConfig","put","deleteConfig","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,0BAA0B,GAAG,+BAAnC;;AAEA,MAAMC,mBAAN,CAA0B;AAEtBC,EAAAA,UAAU,GAAE;AACR,WAAOH,KAAK,CAACI,GAAN,CAAUH,0BAAV,CAAP;AACH;;AAEDI,EAAAA,YAAY,CAACC,MAAD,EAAQ;AAChB,WAAON,KAAK,CAACO,IAAN,CAAWN,0BAAX,EAAuCK,MAAvC,CAAP;AACH;;AAEDE,EAAAA,aAAa,CAACC,QAAD,EAAU;AACnB,WAAOT,KAAK,CAACI,GAAN,CAAUH,0BAA0B,GAAG,GAA7B,GAAmCQ,QAA7C,CAAP;AACH;;AAEDC,EAAAA,YAAY,CAACJ,MAAD,EAASG,QAAT,EAAkB;AAC1B,WAAOT,KAAK,CAACW,GAAN,CAAUV,0BAA0B,GAAG,GAA7B,GAAmCQ,QAA7C,EAAuDH,MAAvD,CAAP;AACH;;AAEDM,EAAAA,YAAY,CAACH,QAAD,EAAU;AAClB,WAAOT,KAAK,CAACa,MAAN,CAAaZ,0BAA0B,GAAG,GAA7B,GAAmCQ,QAAhD,CAAP;AACH;;AApBqB;;AAuB1B,eAAe,IAAIP,mBAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\nconst CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080/configs\";\n\nclass ConfigServerService {\n\n    getConfigs(){\n        return axios.get(CONFIG_SERVER_API_BASE_URL);\n    }\n\n    createConfig(config){\n        return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n    }\n\n    getConfigById(configId){\n        return axios.get(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n    }\n\n    updateConfig(config, configId){\n        return axios.put(CONFIG_SERVER_API_BASE_URL + '/' + configId, config);\n    }\n\n    deleteConfig(configId){\n        return axios.delete(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n    }\n}\n\nexport default new ConfigServerService()"]},"metadata":{},"sourceType":"module"}