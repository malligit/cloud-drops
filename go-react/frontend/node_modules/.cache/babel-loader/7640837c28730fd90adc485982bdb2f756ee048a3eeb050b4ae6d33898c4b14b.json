{"ast":null,"code":"import axios from 'axios';\nconst CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080/configs\";\nconst CONFIG_SERVER_API_ENVS_URL = \"http://localhost:9080/envs\";\nclass ConfigServerService {\n  getConfigs() {\n    console.log(\"Reading config data\");\n    return axios.get(CONFIG_SERVER_API_BASE_URL, \"/configs\");\n  }\n  getEnvironments() {\n    console.log(\"Reading Envs data\");\n    return axios.get(CONFIG_SERVER_API_ENVS_URL, \"/envs\");\n  }\n  getServices(env) {\n    console.log(\"Reading services \");\n    return axios.get(CONFIG_SERVER_API_ENVS_URL + \"/\" + env);\n  }\n  createConfig(config) {\n    return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n  }\n  getConfigById(configId) {\n    return axios.get(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n  }\n  updateConfig(config, configId) {\n    return axios.put(CONFIG_SERVER_API_BASE_URL + '/' + configId, config);\n  }\n  deleteConfig(configId) {\n    return axios.delete(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n  }\n}\nexport default new ConfigServerService();","map":{"version":3,"names":["axios","CONFIG_SERVER_API_BASE_URL","CONFIG_SERVER_API_ENVS_URL","ConfigServerService","getConfigs","console","log","get","getEnvironments","getServices","env","createConfig","config","post","getConfigById","configId","updateConfig","put","deleteConfig","delete"],"sources":["/Users/malli/tech-space/go-space/go-react-mysql-crud-apps/frontend/src/services/ConfigServerService.js"],"sourcesContent":["import axios from 'axios';\n\nconst CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080/configs\";\nconst CONFIG_SERVER_API_ENVS_URL = \"http://localhost:9080/envs\";\n\nclass ConfigServerService {\n\n    getConfigs(){\n        console.log(\"Reading config data\");\n        return axios.get(CONFIG_SERVER_API_BASE_URL,\"/configs\");\n    }\n\n    getEnvironments(){\n        console.log(\"Reading Envs data\");\n        return axios.get(CONFIG_SERVER_API_ENVS_URL,\"/envs\");\n    }\n\n    \n    getServices(env){\n        console.log(\"Reading services \");\n        return axios.get(CONFIG_SERVER_API_ENVS_URL+\"/\"+env);\n    }\n\n    createConfig(config){\n        return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n    }\n\n    getConfigById(configId){\n        return axios.get(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n    }\n\n    updateConfig(config, configId){\n        return axios.put(CONFIG_SERVER_API_BASE_URL + '/' + configId, config);\n    }\n\n    deleteConfig(configId){\n        return axios.delete(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n    }\n}\n\nexport default new ConfigServerService()"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,0BAA0B,GAAG,+BAA+B;AAClE,MAAMC,0BAA0B,GAAG,4BAA4B;AAE/D,MAAMC,mBAAmB,CAAC;EAEtBC,UAAUA,CAAA,EAAE;IACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,OAAON,KAAK,CAACO,GAAG,CAACN,0BAA0B,EAAC,UAAU,CAAC;EAC3D;EAEAO,eAAeA,CAAA,EAAE;IACbH,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAON,KAAK,CAACO,GAAG,CAACL,0BAA0B,EAAC,OAAO,CAAC;EACxD;EAGAO,WAAWA,CAACC,GAAG,EAAC;IACZL,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAON,KAAK,CAACO,GAAG,CAACL,0BAA0B,GAAC,GAAG,GAACQ,GAAG,CAAC;EACxD;EAEAC,YAAYA,CAACC,MAAM,EAAC;IAChB,OAAOZ,KAAK,CAACa,IAAI,CAACZ,0BAA0B,EAAEW,MAAM,CAAC;EACzD;EAEAE,aAAaA,CAACC,QAAQ,EAAC;IACnB,OAAOf,KAAK,CAACO,GAAG,CAACN,0BAA0B,GAAG,GAAG,GAAGc,QAAQ,CAAC;EACjE;EAEAC,YAAYA,CAACJ,MAAM,EAAEG,QAAQ,EAAC;IAC1B,OAAOf,KAAK,CAACiB,GAAG,CAAChB,0BAA0B,GAAG,GAAG,GAAGc,QAAQ,EAAEH,MAAM,CAAC;EACzE;EAEAM,YAAYA,CAACH,QAAQ,EAAC;IAClB,OAAOf,KAAK,CAACmB,MAAM,CAAClB,0BAA0B,GAAG,GAAG,GAAGc,QAAQ,CAAC;EACpE;AACJ;AAEA,eAAe,IAAIZ,mBAAmB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}