{"ast":null,"code":"import axios from 'axios';\nconst CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080\";\nclass ConfigServerService {\n  getConfigs() {\n    console.log(\"Reading config data\");\n    return axios.get(CONFIG_SERVER_API_BASE_URL + \"/\" + \"configs\");\n  }\n  getConfigById(id) {\n    console.log(\"Reading config data by Id\");\n    return axios.get(CONFIG_SERVER_API_BASE_URL + \"/\" + \"configs/\" + id);\n  }\n  getConfigsByEnvBySvc(env, svc) {\n    console.log(env + \"@@@@@@\" + svc);\n    return axios.get(CONFIG_SERVER_API_BASE_URL + \"/\" + \"configs/\" + env + \"/\" + svc);\n  }\n  getEnvironments() {\n    console.log(\"Reading Envs data\");\n    return axios.get(CONFIG_SERVER_API_BASE_URL, \"/envs\");\n  }\n  getServices(env) {\n    console.log(\"Reading services \");\n    return axios.get(CONFIG_SERVER_API_BASE_URL + \"/envs/\" + env);\n  }\n  //Write operations  \n\n  updateConfig(configValue, configId) {\n    return axios.put(CONFIG_SERVER_API_BASE_URL + '/configs/' + configId, configValue);\n  }\n  createConfig(config) {\n    return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n  }\n}\nexport default new ConfigServerService();","map":{"version":3,"names":["axios","CONFIG_SERVER_API_BASE_URL","ConfigServerService","getConfigs","console","log","get","getConfigById","id","getConfigsByEnvBySvc","env","svc","getEnvironments","getServices","updateConfig","configValue","configId","put","createConfig","config","post"],"sources":["/Users/malli/tech-space/go-space/go-react-mysql-crud-apps/frontend/src/services/ConfigServerService.js"],"sourcesContent":["import axios from 'axios';\n\nconst CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080\";\n\n\nclass ConfigServerService {\n\n    getConfigs(){\n        console.log(\"Reading config data\");\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/\"+\"configs\");\n    }\n    getConfigById(id){\n        console.log(\"Reading config data by Id\");\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/\"+\"configs/\"+id);\n    }\n    getConfigsByEnvBySvc(env,svc) {\n        console.log(env+\"@@@@@@\"+svc);\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/\"+\"configs/\"+env+\"/\"+svc);\n    }\n\n    getEnvironments(){\n        console.log(\"Reading Envs data\");\n        return axios.get(CONFIG_SERVER_API_BASE_URL,\"/envs\");\n    }\n        \n    getServices(env){\n        console.log(\"Reading services \");\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/envs/\"+env);\n    }\n//Write operations  \n\n    updateConfig(configValue, configId){\n        return axios.put(CONFIG_SERVER_API_BASE_URL + '/configs/' + configId, configValue);\n    }\n\n    createConfig(config){\n        return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n    }\n   \n}\n\nexport default new ConfigServerService()"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,0BAA0B,GAAG,uBAAuB;AAG1D,MAAMC,mBAAmB,CAAC;EAEtBC,UAAUA,CAAA,EAAE;IACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,OAAOL,KAAK,CAACM,GAAG,CAACL,0BAA0B,GAAC,GAAG,GAAC,SAAS,CAAC;EAC9D;EACAM,aAAaA,CAACC,EAAE,EAAC;IACbJ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;IACxC,OAAOL,KAAK,CAACM,GAAG,CAACL,0BAA0B,GAAC,GAAG,GAAC,UAAU,GAACO,EAAE,CAAC;EAClE;EACAC,oBAAoBA,CAACC,GAAG,EAACC,GAAG,EAAE;IAC1BP,OAAO,CAACC,GAAG,CAACK,GAAG,GAAC,QAAQ,GAACC,GAAG,CAAC;IAC7B,OAAOX,KAAK,CAACM,GAAG,CAACL,0BAA0B,GAAC,GAAG,GAAC,UAAU,GAACS,GAAG,GAAC,GAAG,GAACC,GAAG,CAAC;EAC3E;EAEAC,eAAeA,CAAA,EAAE;IACbR,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAOL,KAAK,CAACM,GAAG,CAACL,0BAA0B,EAAC,OAAO,CAAC;EACxD;EAEAY,WAAWA,CAACH,GAAG,EAAC;IACZN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAOL,KAAK,CAACM,GAAG,CAACL,0BAA0B,GAAC,QAAQ,GAACS,GAAG,CAAC;EAC7D;EACJ;;EAEII,YAAYA,CAACC,WAAW,EAAEC,QAAQ,EAAC;IAC/B,OAAOhB,KAAK,CAACiB,GAAG,CAAChB,0BAA0B,GAAG,WAAW,GAAGe,QAAQ,EAAED,WAAW,CAAC;EACtF;EAEAG,YAAYA,CAACC,MAAM,EAAC;IAChB,OAAOnB,KAAK,CAACoB,IAAI,CAACnB,0BAA0B,EAAEkB,MAAM,CAAC;EACzD;AAEJ;AAEA,eAAe,IAAIjB,mBAAmB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}