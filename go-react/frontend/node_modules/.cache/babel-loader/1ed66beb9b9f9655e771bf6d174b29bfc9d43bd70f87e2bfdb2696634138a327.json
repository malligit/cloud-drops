{"ast":null,"code":"import axios from 'axios';\nconst CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080\";\nconst CONFIG_SERVER_API_ENVS_URL = \"http://localhost:9080/envs\";\nclass ConfigServerService {\n  getConfigs() {\n    console.log(\"Reading config data\");\n    return axios.get(CONFIG_SERVER_API_BASE_URL + \"/\" + \"configs\");\n  }\n  getConfigsByEnvBySvc() {\n    return axios.get(CONFIG_SERVER_API_BASE_URL + \"/\" + \"configs/{env}/{svc}\");\n  }\n  getEnvironments() {\n    console.log(\"Reading Envs data\");\n    return axios.get(CONFIG_SERVER_API_ENVS_URL, \"/envs\");\n  }\n  getServices(env) {\n    console.log(\"Reading services \");\n    return axios.get(CONFIG_SERVER_API_ENVS_URL + \"/\" + env);\n  }\n  createConfig(config) {\n    return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n  }\n  getConfigById(configId) {\n    return axios.get(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n  }\n  updateConfig(config, configId) {\n    return axios.put(CONFIG_SERVER_API_BASE_URL + '/' + configId, config);\n  }\n  deleteConfig(configId) {\n    return axios.delete(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n  }\n}\nexport default new ConfigServerService();","map":{"version":3,"names":["axios","CONFIG_SERVER_API_BASE_URL","CONFIG_SERVER_API_ENVS_URL","ConfigServerService","getConfigs","console","log","get","getConfigsByEnvBySvc","getEnvironments","getServices","env","createConfig","config","post","getConfigById","configId","updateConfig","put","deleteConfig","delete"],"sources":["/Users/malli/tech-space/go-space/go-react-mysql-crud-apps/frontend/src/services/ConfigServerService.js"],"sourcesContent":["import axios from 'axios';\n\nconst CONFIG_SERVER_API_BASE_URL = \"http://localhost:9080\";\nconst CONFIG_SERVER_API_ENVS_URL = \"http://localhost:9080/envs\";\n\nclass ConfigServerService {\n\n    getConfigs(){\n        console.log(\"Reading config data\");\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/\"+\"configs\");\n    }\n\n    getConfigsByEnvBySvc() {\n        return axios.get(CONFIG_SERVER_API_BASE_URL+\"/\"+\"configs/{env}/{svc}\");\n    }\n\n    getEnvironments(){\n        console.log(\"Reading Envs data\");\n        return axios.get(CONFIG_SERVER_API_ENVS_URL,\"/envs\");\n    }\n    \n    \n    getServices(env){\n        console.log(\"Reading services \");\n        return axios.get(CONFIG_SERVER_API_ENVS_URL+\"/\"+env);\n    }\n\n    createConfig(config){\n        return axios.post(CONFIG_SERVER_API_BASE_URL, config);\n    }\n\n    getConfigById(configId){\n        return axios.get(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n    }\n\n    updateConfig(config, configId){\n        return axios.put(CONFIG_SERVER_API_BASE_URL + '/' + configId, config);\n    }\n\n    deleteConfig(configId){\n        return axios.delete(CONFIG_SERVER_API_BASE_URL + '/' + configId);\n    }\n}\n\nexport default new ConfigServerService()"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,0BAA0B,GAAG,uBAAuB;AAC1D,MAAMC,0BAA0B,GAAG,4BAA4B;AAE/D,MAAMC,mBAAmB,CAAC;EAEtBC,UAAUA,CAAA,EAAE;IACRC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,OAAON,KAAK,CAACO,GAAG,CAACN,0BAA0B,GAAC,GAAG,GAAC,SAAS,CAAC;EAC9D;EAEAO,oBAAoBA,CAAA,EAAG;IACnB,OAAOR,KAAK,CAACO,GAAG,CAACN,0BAA0B,GAAC,GAAG,GAAC,qBAAqB,CAAC;EAC1E;EAEAQ,eAAeA,CAAA,EAAE;IACbJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAON,KAAK,CAACO,GAAG,CAACL,0BAA0B,EAAC,OAAO,CAAC;EACxD;EAGAQ,WAAWA,CAACC,GAAG,EAAC;IACZN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,OAAON,KAAK,CAACO,GAAG,CAACL,0BAA0B,GAAC,GAAG,GAACS,GAAG,CAAC;EACxD;EAEAC,YAAYA,CAACC,MAAM,EAAC;IAChB,OAAOb,KAAK,CAACc,IAAI,CAACb,0BAA0B,EAAEY,MAAM,CAAC;EACzD;EAEAE,aAAaA,CAACC,QAAQ,EAAC;IACnB,OAAOhB,KAAK,CAACO,GAAG,CAACN,0BAA0B,GAAG,GAAG,GAAGe,QAAQ,CAAC;EACjE;EAEAC,YAAYA,CAACJ,MAAM,EAAEG,QAAQ,EAAC;IAC1B,OAAOhB,KAAK,CAACkB,GAAG,CAACjB,0BAA0B,GAAG,GAAG,GAAGe,QAAQ,EAAEH,MAAM,CAAC;EACzE;EAEAM,YAAYA,CAACH,QAAQ,EAAC;IAClB,OAAOhB,KAAK,CAACoB,MAAM,CAACnB,0BAA0B,GAAG,GAAG,GAAGe,QAAQ,CAAC;EACpE;AACJ;AAEA,eAAe,IAAIb,mBAAmB,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}